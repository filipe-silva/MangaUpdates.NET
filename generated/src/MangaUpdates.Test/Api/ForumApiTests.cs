/*
 * MangaUpdates API
 *
 * This API powers our website. Most API functions are public and do not require an account. For user-based functions, you must register an account. Currently, user registration must be done through our main website and is disabled via this API.  Download OpenAPI Specification: [openapi.yaml](openapi.yaml)  Please contact us at the following emails if you have questions:  * lambchopsil@mangaupdates.com * manick@mangaupdates.com  ## Warranties  MangaUpdates makes no warranties about service availability, correctness of the data, or anything else. The service is provided as is, and may change at any time.  ## Acceptable Use Policy  * You will credit MangaUpdates when using data provided by this API. * You will use reasonable spacing between requests so as not to overwhelm the MangaUpdates servers, and employ caching mechanisms when accessing data. * You will NOT use MangaUpdates data or API in a way that will:     * Deceive or defraud users     * Assist or perform an illegal action     * Create spam     * Damage the database  We reserve the right to change this policy at any time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using MangaUpdates.Client;
using MangaUpdates.Api;
// uncomment below to import models
//using MangaUpdates.Model;

namespace MangaUpdates.Test.Api
{
    /// <summary>
    ///  Class for testing ForumApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ForumApiTests : IDisposable
    {
        private ForumApi instance;

        public ForumApiTests()
        {
            instance = new ForumApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ForumApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ForumApi
            //Assert.IsType<ForumApi>(instance);
        }

        /// <summary>
        /// Test AddForumAdmin
        /// </summary>
        [Fact]
        public void AddForumAdminTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int forumId = null;
            //int userId = null;
            //var response = instance.AddForumAdmin(forumId, userId);
            //Assert.IsType<ApiResponseV1>(response);
        }

        /// <summary>
        /// Test AddPollVote
        /// </summary>
        [Fact]
        public void AddPollVoteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int forumId = null;
            //int topicId = null;
            //int choiceId = null;
            //var response = instance.AddPollVote(forumId, topicId, choiceId);
            //Assert.IsType<ApiResponseV1>(response);
        }

        /// <summary>
        /// Test AddPost
        /// </summary>
        [Fact]
        public void AddPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int forumId = null;
            //int topicId = null;
            //ForumPostModelUpdateV1 forumPostModelUpdateV1 = null;
            //var response = instance.AddPost(forumId, topicId, forumPostModelUpdateV1);
            //Assert.IsType<ApiResponseV1>(response);
        }

        /// <summary>
        /// Test AddTemporaryPollImage
        /// </summary>
        [Fact]
        public void AddTemporaryPollImageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream image = null;
            //string caption = null;
            //var response = instance.AddTemporaryPollImage(image, caption);
            //Assert.IsType<ApiResponseV1>(response);
        }

        /// <summary>
        /// Test AddTopic
        /// </summary>
        [Fact]
        public void AddTopicTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int forumId = null;
            //ForumTopicModelAddV1 forumTopicModelAddV1 = null;
            //var response = instance.AddTopic(forumId, forumTopicModelAddV1);
            //Assert.IsType<ApiResponseV1>(response);
        }

        /// <summary>
        /// Test DeletePost
        /// </summary>
        [Fact]
        public void DeletePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int forumId = null;
            //int topicId = null;
            //int postId = null;
            //var response = instance.DeletePost(forumId, topicId, postId);
            //Assert.IsType<ApiResponseV1>(response);
        }

        /// <summary>
        /// Test DeletePostReport
        /// </summary>
        [Fact]
        public void DeletePostReportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int forumId = null;
            //int topicId = null;
            //int postId = null;
            //var response = instance.DeletePostReport(forumId, topicId, postId);
            //Assert.IsType<ApiResponseV1>(response);
        }

        /// <summary>
        /// Test DeleteTopic
        /// </summary>
        [Fact]
        public void DeleteTopicTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int forumId = null;
            //int topicId = null;
            //var response = instance.DeleteTopic(forumId, topicId);
            //Assert.IsType<ApiResponseV1>(response);
        }

        /// <summary>
        /// Test GetCurrentWarnForUser
        /// </summary>
        [Fact]
        public void GetCurrentWarnForUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int userId = null;
            //var response = instance.GetCurrentWarnForUser(userId);
            //Assert.IsType<ForumWarnModelV1>(response);
        }

        /// <summary>
        /// Test ListCategories
        /// </summary>
        [Fact]
        public void ListCategoriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ListCategories();
            //Assert.IsType<List<ForumCategoryModelListV1>>(response);
        }

        /// <summary>
        /// Test ListGlobalTopics
        /// </summary>
        [Fact]
        public void ListGlobalTopicsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ListGlobalTopics();
            //Assert.IsType<ForumTopicListResponseV1>(response);
        }

        /// <summary>
        /// Test ListPopularForums
        /// </summary>
        [Fact]
        public void ListPopularForumsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ListPopularForums();
            //Assert.IsType<List<ForumForumModelListV1>>(response);
        }

        /// <summary>
        /// Test ListPosts
        /// </summary>
        [Fact]
        public void ListPostsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int forumId = null;
            //int topicId = null;
            //PerPageSearchRequestV1 perPageSearchRequestV1 = null;
            //var response = instance.ListPosts(forumId, topicId, perPageSearchRequestV1);
            //Assert.IsType<ForumPostListResponseV1>(response);
        }

        /// <summary>
        /// Test ListPostsByMe
        /// </summary>
        [Fact]
        public void ListPostsByMeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int forumId = null;
            //int topicId = null;
            //var response = instance.ListPostsByMe(forumId, topicId);
            //Assert.IsType<ForumPostByUserResponseV1>(response);
        }

        /// <summary>
        /// Test ListReportedPosts
        /// </summary>
        [Fact]
        public void ListReportedPostsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ListReportedPosts();
            //Assert.IsType<List<ForumPostReportModelV1>>(response);
        }

        /// <summary>
        /// Test ListTopics
        /// </summary>
        [Fact]
        public void ListTopicsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int forumId = null;
            //ForumTopicListRequestV1 forumTopicListRequestV1 = null;
            //bool? withFirstPost = null;
            //var response = instance.ListTopics(forumId, forumTopicListRequestV1, withFirstPost);
            //Assert.IsType<ForumTopicListResponseV1>(response);
        }

        /// <summary>
        /// Test ListWarnHistoryForUser
        /// </summary>
        [Fact]
        public void ListWarnHistoryForUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int userId = null;
            //var response = instance.ListWarnHistoryForUser(userId);
            //Assert.IsType<List<ForumWarnModelV1>>(response);
        }

        /// <summary>
        /// Test LookupPost
        /// </summary>
        [Fact]
        public void LookupPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int postId = null;
            //var response = instance.LookupPost(postId);
            //Assert.IsType<ForumLookupResponseV1>(response);
        }

        /// <summary>
        /// Test LookupSeries
        /// </summary>
        [Fact]
        public void LookupSeriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int seriesId = null;
            //var response = instance.LookupSeries(seriesId);
            //Assert.IsType<ForumLookupResponseV1>(response);
        }

        /// <summary>
        /// Test LookupTopic
        /// </summary>
        [Fact]
        public void LookupTopicTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int topicId = null;
            //var response = instance.LookupTopic(topicId);
            //Assert.IsType<ForumLookupResponseV1>(response);
        }

        /// <summary>
        /// Test RemoveForumAdmin
        /// </summary>
        [Fact]
        public void RemoveForumAdminTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int forumId = null;
            //int userId = null;
            //var response = instance.RemoveForumAdmin(forumId, userId);
            //Assert.IsType<ApiResponseV1>(response);
        }

        /// <summary>
        /// Test ReportPost
        /// </summary>
        [Fact]
        public void ReportPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int forumId = null;
            //int topicId = null;
            //int postId = null;
            //ForumPostReportModelUpdateV1 forumPostReportModelUpdateV1 = null;
            //var response = instance.ReportPost(forumId, topicId, postId, forumPostReportModelUpdateV1);
            //Assert.IsType<ApiResponseV1>(response);
        }

        /// <summary>
        /// Test RetrieveForum
        /// </summary>
        [Fact]
        public void RetrieveForumTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int forumId = null;
            //bool? unrenderedFields = null;
            //var response = instance.RetrieveForum(forumId, unrenderedFields);
            //Assert.IsType<ForumForumModelV1>(response);
        }

        /// <summary>
        /// Test RetrievePost
        /// </summary>
        [Fact]
        public void RetrievePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int forumId = null;
            //int topicId = null;
            //int postId = null;
            //bool? unrenderedFields = null;
            //var response = instance.RetrievePost(forumId, topicId, postId, unrenderedFields);
            //Assert.IsType<ForumPostModelV1>(response);
        }

        /// <summary>
        /// Test RetrievePostLocation
        /// </summary>
        [Fact]
        public void RetrievePostLocationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int forumId = null;
            //int topicId = null;
            //int postId = null;
            //var response = instance.RetrievePostLocation(forumId, topicId, postId);
            //Assert.IsType<ApiResponseV1>(response);
        }

        /// <summary>
        /// Test RetrieveTemporaryPollImages
        /// </summary>
        [Fact]
        public void RetrieveTemporaryPollImagesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.RetrieveTemporaryPollImages();
            //Assert.IsType<List<ForumPollTempImageModelV1>>(response);
        }

        /// <summary>
        /// Test RetrieveTopic
        /// </summary>
        [Fact]
        public void RetrieveTopicTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int forumId = null;
            //int topicId = null;
            //bool? unrenderedFields = null;
            //var response = instance.RetrieveTopic(forumId, topicId, unrenderedFields);
            //Assert.IsType<ForumTopicModelV1>(response);
        }

        /// <summary>
        /// Test RetrieveVote
        /// </summary>
        [Fact]
        public void RetrieveVoteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int forumId = null;
            //int topicId = null;
            //var response = instance.RetrieveVote(forumId, topicId);
            //Assert.IsType<ForumPollVoteModelV1>(response);
        }

        /// <summary>
        /// Test SearchForumPost
        /// </summary>
        [Fact]
        public void SearchForumPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ForumSearchRequestV1 forumSearchRequestV1 = null;
            //var response = instance.SearchForumPost(forumSearchRequestV1);
            //Assert.IsType<ForumSearchResponseV1>(response);
        }

        /// <summary>
        /// Test SearchSpecificForumPost
        /// </summary>
        [Fact]
        public void SearchSpecificForumPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int forumId = null;
            //ForumSearchRequestV1 forumSearchRequestV1 = null;
            //var response = instance.SearchSpecificForumPost(forumId, forumSearchRequestV1);
            //Assert.IsType<ForumSearchResponseV1>(response);
        }

        /// <summary>
        /// Test SearchSpecificTopicPost
        /// </summary>
        [Fact]
        public void SearchSpecificTopicPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int forumId = null;
            //int topicId = null;
            //ForumSearchRequestV1 forumSearchRequestV1 = null;
            //var response = instance.SearchSpecificTopicPost(forumId, topicId, forumSearchRequestV1);
            //Assert.IsType<ForumSearchResponseV1>(response);
        }

        /// <summary>
        /// Test ShowLogPost
        /// </summary>
        [Fact]
        public void ShowLogPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ForumAdminHistorySearchRequestV1 forumAdminHistorySearchRequestV1 = null;
            //var response = instance.ShowLogPost(forumAdminHistorySearchRequestV1);
            //Assert.IsType<ForumAdminHistorySearchResponseV1>(response);
        }

        /// <summary>
        /// Test UpdatePost
        /// </summary>
        [Fact]
        public void UpdatePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int forumId = null;
            //int topicId = null;
            //int postId = null;
            //ForumPostModelUpdateV1 forumPostModelUpdateV1 = null;
            //var response = instance.UpdatePost(forumId, topicId, postId, forumPostModelUpdateV1);
            //Assert.IsType<ApiResponseV1>(response);
        }

        /// <summary>
        /// Test UpdateTopic
        /// </summary>
        [Fact]
        public void UpdateTopicTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int forumId = null;
            //int topicId = null;
            //ForumTopicModelUpdateV1 forumTopicModelUpdateV1 = null;
            //var response = instance.UpdateTopic(forumId, topicId, forumTopicModelUpdateV1);
            //Assert.IsType<ApiResponseV1>(response);
        }

        /// <summary>
        /// Test UpdateTopicPoll
        /// </summary>
        [Fact]
        public void UpdateTopicPollTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int forumId = null;
            //int topicId = null;
            //ForumPollModelUpdateV1 forumPollModelUpdateV1 = null;
            //var response = instance.UpdateTopicPoll(forumId, topicId, forumPollModelUpdateV1);
            //Assert.IsType<ApiResponseV1>(response);
        }

        /// <summary>
        /// Test UpdateUserWarnLevel
        /// </summary>
        [Fact]
        public void UpdateUserWarnLevelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int userId = null;
            //ForumWarnModelUpdateV1 forumWarnModelUpdateV1 = null;
            //var response = instance.UpdateUserWarnLevel(userId, forumWarnModelUpdateV1);
            //Assert.IsType<ApiResponseV1>(response);
        }
    }
}
