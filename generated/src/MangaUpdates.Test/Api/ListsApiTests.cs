/*
 * MangaUpdates API
 *
 * This API powers our website. Most API functions are public and do not require an account. For user-based functions, you must register an account. Currently, user registration must be done through our main website and is disabled via this API.  Download OpenAPI Specification: [openapi.yaml](openapi.yaml)  Please contact us at the following emails if you have questions:  * lambchopsil@mangaupdates.com * manick@mangaupdates.com  ## Warranties  MangaUpdates makes no warranties about service availability, correctness of the data, or anything else. The service is provided as is, and may change at any time.  ## Acceptable Use Policy  * You will credit MangaUpdates when using data provided by this API. * You will use reasonable spacing between requests so as not to overwhelm the MangaUpdates servers, and employ caching mechanisms when accessing data. * You will NOT use MangaUpdates data or API in a way that will:     * Deceive or defraud users     * Assist or perform an illegal action     * Create spam     * Damage the database  We reserve the right to change this policy at any time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using MangaUpdates.Client;
using MangaUpdates.Api;
// uncomment below to import models
//using MangaUpdates.Model;

namespace MangaUpdates.Test.Api
{
    /// <summary>
    ///  Class for testing ListsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ListsApiTests : IDisposable
    {
        private ListsApi instance;

        public ListsApiTests()
        {
            instance = new ListsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ListsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ListsApi
            //Assert.IsType<ListsApi>(instance);
        }

        /// <summary>
        /// Test AddCustomList
        /// </summary>
        [Fact]
        public void AddCustomListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ListsModelUpdateV1 listsModelUpdateV1 = null;
            //var response = instance.AddCustomList(listsModelUpdateV1);
            //Assert.IsType<ApiResponseV1>(response);
        }

        /// <summary>
        /// Test AddListSeries
        /// </summary>
        [Fact]
        public void AddListSeriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<ListsSeriesModelUpdateV1> listsSeriesModelUpdateV1 = null;
            //instance.AddListSeries(listsSeriesModelUpdateV1);
        }

        /// <summary>
        /// Test AddListSeriesBulk
        /// </summary>
        [Fact]
        public void AddListSeriesBulkTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //List<ListsBulkAddModelV1> listsBulkAddModelV1 = null;
            //var response = instance.AddListSeriesBulk(id, listsBulkAddModelV1);
            //Assert.IsType<ApiResponseV1>(response);
        }

        /// <summary>
        /// Test DeleteCustomList
        /// </summary>
        [Fact]
        public void DeleteCustomListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //var response = instance.DeleteCustomList(id);
            //Assert.IsType<ApiResponseV1>(response);
        }

        /// <summary>
        /// Test DeleteListSeries
        /// </summary>
        [Fact]
        public void DeleteListSeriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int> requestBody = null;
            //var response = instance.DeleteListSeries(requestBody);
            //Assert.IsType<ApiResponseV1>(response);
        }

        /// <summary>
        /// Test RetrieveListById
        /// </summary>
        [Fact]
        public void RetrieveListByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //bool? unrenderedFields = null;
            //var response = instance.RetrieveListById(id, unrenderedFields);
            //Assert.IsType<ListsModelV1>(response);
        }

        /// <summary>
        /// Test RetrieveListSeries
        /// </summary>
        [Fact]
        public void RetrieveListSeriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int seriesId = null;
            //bool? unrenderedFields = null;
            //var response = instance.RetrieveListSeries(seriesId, unrenderedFields);
            //Assert.IsType<ListsSeriesModelV1>(response);
        }

        /// <summary>
        /// Test RetrieveLists
        /// </summary>
        [Fact]
        public void RetrieveListsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.RetrieveLists();
            //Assert.IsType<List<ListsModelV1>>(response);
        }

        /// <summary>
        /// Test RetrievePublicListStats
        /// </summary>
        [Fact]
        public void RetrievePublicListStatsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int userId = null;
            //var response = instance.RetrievePublicListStats(userId);
            //Assert.IsType<ListsPublicStatsModelV1>(response);
        }

        /// <summary>
        /// Test RetrievePublicLists
        /// </summary>
        [Fact]
        public void RetrievePublicListsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int userId = null;
            //var response = instance.RetrievePublicLists(userId);
            //Assert.IsType<List<ListsModelV1>>(response);
        }

        /// <summary>
        /// Test RetrieveSimilarUsersBySeries
        /// </summary>
        [Fact]
        public void RetrieveSimilarUsersBySeriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string listName = null;
            //int seriesId = null;
            //var response = instance.RetrieveSimilarUsersBySeries(listName, seriesId);
            //Assert.IsType<ListsSimilarUsersResponseV1>(response);
        }

        /// <summary>
        /// Test SearchListsPost
        /// </summary>
        [Fact]
        public void SearchListsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //ListsSearchRequestV1 listsSearchRequestV1 = null;
            //var response = instance.SearchListsPost(id, listsSearchRequestV1);
            //Assert.IsType<ListsSearchResponseV1>(response);
        }

        /// <summary>
        /// Test SearchPublicListsPost
        /// </summary>
        [Fact]
        public void SearchPublicListsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int userId = null;
            //int id = null;
            //ListsSearchRequestV1 listsSearchRequestV1 = null;
            //var response = instance.SearchPublicListsPost(userId, id, listsSearchRequestV1);
            //Assert.IsType<ListsPublicSearchResponseV1>(response);
        }

        /// <summary>
        /// Test UpdateList
        /// </summary>
        [Fact]
        public void UpdateListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //ListsModelUpdateV1 listsModelUpdateV1 = null;
            //var response = instance.UpdateList(id, listsModelUpdateV1);
            //Assert.IsType<ApiResponseV1>(response);
        }

        /// <summary>
        /// Test UpdateListSeries
        /// </summary>
        [Fact]
        public void UpdateListSeriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<ListsSeriesModelUpdateV1> listsSeriesModelUpdateV1 = null;
            //var response = instance.UpdateListSeries(listsSeriesModelUpdateV1);
            //Assert.IsType<ApiResponseV1>(response);
        }
    }
}
