/*
 * MangaUpdates API
 *
 * This API powers our website. Most API functions are public and do not require an account. For user-based functions, you must register an account. Currently, user registration must be done through our main website and is disabled via this API.  Download OpenAPI Specification: [openapi.yaml](openapi.yaml)  Please contact us at the following emails if you have questions:  * lambchopsil@mangaupdates.com * manick@mangaupdates.com  ## Warranties  MangaUpdates makes no warranties about service availability, correctness of the data, or anything else. The service is provided as is, and may change at any time.  ## Acceptable Use Policy  * You will credit MangaUpdates when using data provided by this API. * You will use reasonable spacing between requests so as not to overwhelm the MangaUpdates servers, and employ caching mechanisms when accessing data. * You will NOT use MangaUpdates data or API in a way that will:     * Deceive or defraud users     * Assist or perform an illegal action     * Create spam     * Damage the database  We reserve the right to change this policy at any time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using MangaUpdates.Client;
using MangaUpdates.Api;
// uncomment below to import models
//using MangaUpdates.Model;

namespace MangaUpdates.Test.Api
{
    /// <summary>
    ///  Class for testing ConvoApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ConvoApiTests : IDisposable
    {
        private ConvoApi instance;

        public ConvoApiTests()
        {
            instance = new ConvoApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ConvoApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ConvoApi
            //Assert.IsType<ConvoApi>(instance);
        }

        /// <summary>
        /// Test AbandonConvo
        /// </summary>
        [Fact]
        public void AbandonConvoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //var response = instance.AbandonConvo(id);
            //Assert.IsType<ApiResponseV1>(response);
        }

        /// <summary>
        /// Test AbandonConvoBulk
        /// </summary>
        [Fact]
        public void AbandonConvoBulkTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ConvoBulkModelV1 convoBulkModelV1 = null;
            //var response = instance.AbandonConvoBulk(convoBulkModelV1);
            //Assert.IsType<ApiResponseV1>(response);
        }

        /// <summary>
        /// Test AddConvo
        /// </summary>
        [Fact]
        public void AddConvoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ConvoModelAddV1 convoModelAddV1 = null;
            //var response = instance.AddConvo(convoModelAddV1);
            //Assert.IsType<ApiResponseV1>(response);
        }

        /// <summary>
        /// Test AddConvoMessage
        /// </summary>
        [Fact]
        public void AddConvoMessageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //ConvoMessageModelUpdateV1 convoMessageModelUpdateV1 = null;
            //var response = instance.AddConvoMessage(id, convoMessageModelUpdateV1);
            //Assert.IsType<ApiResponseV1>(response);
        }

        /// <summary>
        /// Test ConvoInbox
        /// </summary>
        [Fact]
        public void ConvoInboxTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ConvoInbox();
            //Assert.IsType<ConvoSearchResponseV1>(response);
        }

        /// <summary>
        /// Test ConvoInboxCount
        /// </summary>
        [Fact]
        public void ConvoInboxCountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ConvoInboxCount();
            //Assert.IsType<ConvoSearchResponseV1>(response);
        }

        /// <summary>
        /// Test ConvoReceived
        /// </summary>
        [Fact]
        public void ConvoReceivedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PerPageSearchRequestV1 perPageSearchRequestV1 = null;
            //var response = instance.ConvoReceived(perPageSearchRequestV1);
            //Assert.IsType<ConvoSearchResponseV1>(response);
        }

        /// <summary>
        /// Test ConvoSent
        /// </summary>
        [Fact]
        public void ConvoSentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PerPageSearchRequestV1 perPageSearchRequestV1 = null;
            //var response = instance.ConvoSent(perPageSearchRequestV1);
            //Assert.IsType<ConvoSearchResponseV1>(response);
        }

        /// <summary>
        /// Test DeleteConvo
        /// </summary>
        [Fact]
        public void DeleteConvoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //var response = instance.DeleteConvo(id);
            //Assert.IsType<ApiResponseV1>(response);
        }

        /// <summary>
        /// Test DeleteConvoBulk
        /// </summary>
        [Fact]
        public void DeleteConvoBulkTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ConvoBulkModelV1 convoBulkModelV1 = null;
            //var response = instance.DeleteConvoBulk(convoBulkModelV1);
            //Assert.IsType<ApiResponseV1>(response);
        }

        /// <summary>
        /// Test IgnoreUser
        /// </summary>
        [Fact]
        public void IgnoreUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int userId = null;
            //var response = instance.IgnoreUser(userId);
            //Assert.IsType<ApiResponseV1>(response);
        }

        /// <summary>
        /// Test InviteUserToConvo
        /// </summary>
        [Fact]
        public void InviteUserToConvoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //List<ConvoParticipantModelAddV1> convoParticipantModelAddV1 = null;
            //var response = instance.InviteUserToConvo(id, convoParticipantModelAddV1);
            //Assert.IsType<ApiResponseV1>(response);
        }

        /// <summary>
        /// Test IsUserIgnored
        /// </summary>
        [Fact]
        public void IsUserIgnoredTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int userId = null;
            //var response = instance.IsUserIgnored(userId);
            //Assert.IsType<ConvoUserIgnoreModelV1>(response);
        }

        /// <summary>
        /// Test JoinConvo
        /// </summary>
        [Fact]
        public void JoinConvoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //var response = instance.JoinConvo(id);
            //Assert.IsType<ApiResponseV1>(response);
        }

        /// <summary>
        /// Test KickUserFromConvo
        /// </summary>
        [Fact]
        public void KickUserFromConvoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //int userId = null;
            //var response = instance.KickUserFromConvo(id, userId);
            //Assert.IsType<ApiResponseV1>(response);
        }

        /// <summary>
        /// Test ListConvoMessages
        /// </summary>
        [Fact]
        public void ListConvoMessagesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //ConvoMessageListRequestV1 convoMessageListRequestV1 = null;
            //var response = instance.ListConvoMessages(id, convoMessageListRequestV1);
            //Assert.IsType<ConvoMessageSearchResponseV1>(response);
        }

        /// <summary>
        /// Test RetrieveConvo
        /// </summary>
        [Fact]
        public void RetrieveConvoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //bool? unrenderedFields = null;
            //var response = instance.RetrieveConvo(id, unrenderedFields);
            //Assert.IsType<ConvoModelV1>(response);
        }

        /// <summary>
        /// Test RetrieveConvoMessage
        /// </summary>
        [Fact]
        public void RetrieveConvoMessageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long id = null;
            //long messageId = null;
            //bool? unrenderedFields = null;
            //var response = instance.RetrieveConvoMessage(id, messageId, unrenderedFields);
            //Assert.IsType<ConvoMessageModelV1>(response);
        }

        /// <summary>
        /// Test RetrieveConvoMessageLocation
        /// </summary>
        [Fact]
        public void RetrieveConvoMessageLocationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long id = null;
            //long messageId = null;
            //var response = instance.RetrieveConvoMessageLocation(id, messageId);
            //Assert.IsType<ApiResponseV1>(response);
        }

        /// <summary>
        /// Test RetrieveConvoParticipants
        /// </summary>
        [Fact]
        public void RetrieveConvoParticipantsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //var response = instance.RetrieveConvoParticipants(id);
            //Assert.IsType<List<ConvoParticipantModelV1>>(response);
        }

        /// <summary>
        /// Test SearchConvoMessagesPost
        /// </summary>
        [Fact]
        public void SearchConvoMessagesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //ConvoMessageSearchRequestV1 convoMessageSearchRequestV1 = null;
            //var response = instance.SearchConvoMessagesPost(id, convoMessageSearchRequestV1);
            //Assert.IsType<ConvoMessageSearchResponseV1>(response);
        }

        /// <summary>
        /// Test SearchConvoPost
        /// </summary>
        [Fact]
        public void SearchConvoPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ConvoSearchRequestV1 convoSearchRequestV1 = null;
            //var response = instance.SearchConvoPost(convoSearchRequestV1);
            //Assert.IsType<ConvoSearchResponseV1>(response);
        }

        /// <summary>
        /// Test UnIgnoreUser
        /// </summary>
        [Fact]
        public void UnIgnoreUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int userId = null;
            //var response = instance.UnIgnoreUser(userId);
            //Assert.IsType<ApiResponseV1>(response);
        }

        /// <summary>
        /// Test UpdateConvo
        /// </summary>
        [Fact]
        public void UpdateConvoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //ConvoModelUpdateV1 convoModelUpdateV1 = null;
            //var response = instance.UpdateConvo(id, convoModelUpdateV1);
            //Assert.IsType<ApiResponseV1>(response);
        }

        /// <summary>
        /// Test UpdateConvoMessage
        /// </summary>
        [Fact]
        public void UpdateConvoMessageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //int messageId = null;
            //ConvoMessageModelUpdateV1 convoMessageModelUpdateV1 = null;
            //var response = instance.UpdateConvoMessage(id, messageId, convoMessageModelUpdateV1);
            //Assert.IsType<ApiResponseV1>(response);
        }
    }
}
