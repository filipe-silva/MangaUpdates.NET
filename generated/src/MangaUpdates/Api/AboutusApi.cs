/*
 * MangaUpdates API
 *
 * This API powers our website. Most API functions are public and do not require an account. For user-based functions, you must register an account. Currently, user registration must be done through our main website and is disabled via this API.  Download OpenAPI Specification: [openapi.yaml](openapi.yaml)  Please contact us at the following emails if you have questions:  * lambchopsil@mangaupdates.com * manick@mangaupdates.com  ## Warranties  MangaUpdates makes no warranties about service availability, correctness of the data, or anything else. The service is provided as is, and may change at any time.  ## Acceptable Use Policy  * You will credit MangaUpdates when using data provided by this API. * You will use reasonable spacing between requests so as not to overwhelm the MangaUpdates servers, and employ caching mechanisms when accessing data. * You will NOT use MangaUpdates data or API in a way that will:     * Deceive or defraud users     * Assist or perform an illegal action     * Create spam     * Damage the database  We reserve the right to change this policy at any time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using MangaUpdates.Client;
using MangaUpdates.Model;

namespace MangaUpdates.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IAboutusApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// add a category
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aboutusCategoryModelUpdateV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponseV1</returns>
        ApiResponseV1 AddAboutusCategory(AboutusCategoryModelUpdateV1 aboutusCategoryModelUpdateV1, int operationIndex = 0);

        /// <summary>
        /// add a category
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aboutusCategoryModelUpdateV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ApiResponseV1</returns>
        ApiResponse<ApiResponseV1> AddAboutusCategoryWithHttpInfo(AboutusCategoryModelUpdateV1 aboutusCategoryModelUpdateV1, int operationIndex = 0);
        /// <summary>
        /// add a user to a category
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">Aboutus Category id</param>
        /// <param name="aboutusUserModelUpdateV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponseV1</returns>
        ApiResponseV1 AddAboutusCategoryUser(long categoryId, AboutusUserModelUpdateV1 aboutusUserModelUpdateV1, int operationIndex = 0);

        /// <summary>
        /// add a user to a category
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">Aboutus Category id</param>
        /// <param name="aboutusUserModelUpdateV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ApiResponseV1</returns>
        ApiResponse<ApiResponseV1> AddAboutusCategoryUserWithHttpInfo(long categoryId, AboutusUserModelUpdateV1 aboutusUserModelUpdateV1, int operationIndex = 0);
        /// <summary>
        /// remove a category
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">Aboutus Category id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponseV1</returns>
        ApiResponseV1 DeleteAboutusCategory(long categoryId, int operationIndex = 0);

        /// <summary>
        /// remove a category
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">Aboutus Category id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ApiResponseV1</returns>
        ApiResponse<ApiResponseV1> DeleteAboutusCategoryWithHttpInfo(long categoryId, int operationIndex = 0);
        /// <summary>
        /// remove a user from a category
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">Aboutus Category id</param>
        /// <param name="entryId">Aboutus Category User Entry id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponseV1</returns>
        ApiResponseV1 DeleteAboutusCategoryUser(long categoryId, long entryId, int operationIndex = 0);

        /// <summary>
        /// remove a user from a category
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">Aboutus Category id</param>
        /// <param name="entryId">Aboutus Category User Entry id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ApiResponseV1</returns>
        ApiResponse<ApiResponseV1> DeleteAboutusCategoryUserWithHttpInfo(long categoryId, long entryId, int operationIndex = 0);
        /// <summary>
        /// reorder aboutus
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aboutusCategoryReorderModelV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponseV1</returns>
        ApiResponseV1 ReorderAboutus(List<AboutusCategoryReorderModelV1> aboutusCategoryReorderModelV1, int operationIndex = 0);

        /// <summary>
        /// reorder aboutus
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aboutusCategoryReorderModelV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ApiResponseV1</returns>
        ApiResponse<ApiResponseV1> ReorderAboutusWithHttpInfo(List<AboutusCategoryReorderModelV1> aboutusCategoryReorderModelV1, int operationIndex = 0);
        /// <summary>
        /// returns categories and users
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;AboutusCategoryModelV1&gt;</returns>
        List<AboutusCategoryModelV1> RetrieveAboutusCategoriesAndUsers(int operationIndex = 0);

        /// <summary>
        /// returns categories and users
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;AboutusCategoryModelV1&gt;</returns>
        ApiResponse<List<AboutusCategoryModelV1>> RetrieveAboutusCategoriesAndUsersWithHttpInfo(int operationIndex = 0);
        /// <summary>
        /// returns a single category
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">Aboutus Category id</param>
        /// <param name="unrenderedFields">Output fields in unrendered form for editing (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>AboutusCategoryModelV1</returns>
        AboutusCategoryModelV1 RetrieveAboutusCategory(long categoryId, bool? unrenderedFields = default(bool?), int operationIndex = 0);

        /// <summary>
        /// returns a single category
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">Aboutus Category id</param>
        /// <param name="unrenderedFields">Output fields in unrendered form for editing (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of AboutusCategoryModelV1</returns>
        ApiResponse<AboutusCategoryModelV1> RetrieveAboutusCategoryWithHttpInfo(long categoryId, bool? unrenderedFields = default(bool?), int operationIndex = 0);
        /// <summary>
        /// returns description of site
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="unrenderedFields">Output fields in unrendered form for editing (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>AboutusDescriptionModelV1</returns>
        AboutusDescriptionModelV1 RetrieveAboutusDescription(bool? unrenderedFields = default(bool?), int operationIndex = 0);

        /// <summary>
        /// returns description of site
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="unrenderedFields">Output fields in unrendered form for editing (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of AboutusDescriptionModelV1</returns>
        ApiResponse<AboutusDescriptionModelV1> RetrieveAboutusDescriptionWithHttpInfo(bool? unrenderedFields = default(bool?), int operationIndex = 0);
        /// <summary>
        /// update a category
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">id of category</param>
        /// <param name="aboutusCategoryModelUpdateV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponseV1</returns>
        ApiResponseV1 UpdateAboutusCategory(long categoryId, AboutusCategoryModelUpdateV1 aboutusCategoryModelUpdateV1, int operationIndex = 0);

        /// <summary>
        /// update a category
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">id of category</param>
        /// <param name="aboutusCategoryModelUpdateV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ApiResponseV1</returns>
        ApiResponse<ApiResponseV1> UpdateAboutusCategoryWithHttpInfo(long categoryId, AboutusCategoryModelUpdateV1 aboutusCategoryModelUpdateV1, int operationIndex = 0);
        /// <summary>
        /// update description of site
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aboutusDescriptionModelV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponseV1</returns>
        ApiResponseV1 UpdateAboutusDescription(AboutusDescriptionModelV1 aboutusDescriptionModelV1, int operationIndex = 0);

        /// <summary>
        /// update description of site
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aboutusDescriptionModelV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ApiResponseV1</returns>
        ApiResponse<ApiResponseV1> UpdateAboutusDescriptionWithHttpInfo(AboutusDescriptionModelV1 aboutusDescriptionModelV1, int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IAboutusApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// add a category
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aboutusCategoryModelUpdateV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponseV1</returns>
        System.Threading.Tasks.Task<ApiResponseV1> AddAboutusCategoryAsync(AboutusCategoryModelUpdateV1 aboutusCategoryModelUpdateV1, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// add a category
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aboutusCategoryModelUpdateV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApiResponseV1)</returns>
        System.Threading.Tasks.Task<ApiResponse<ApiResponseV1>> AddAboutusCategoryWithHttpInfoAsync(AboutusCategoryModelUpdateV1 aboutusCategoryModelUpdateV1, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// add a user to a category
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">Aboutus Category id</param>
        /// <param name="aboutusUserModelUpdateV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponseV1</returns>
        System.Threading.Tasks.Task<ApiResponseV1> AddAboutusCategoryUserAsync(long categoryId, AboutusUserModelUpdateV1 aboutusUserModelUpdateV1, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// add a user to a category
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">Aboutus Category id</param>
        /// <param name="aboutusUserModelUpdateV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApiResponseV1)</returns>
        System.Threading.Tasks.Task<ApiResponse<ApiResponseV1>> AddAboutusCategoryUserWithHttpInfoAsync(long categoryId, AboutusUserModelUpdateV1 aboutusUserModelUpdateV1, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// remove a category
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">Aboutus Category id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponseV1</returns>
        System.Threading.Tasks.Task<ApiResponseV1> DeleteAboutusCategoryAsync(long categoryId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// remove a category
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">Aboutus Category id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApiResponseV1)</returns>
        System.Threading.Tasks.Task<ApiResponse<ApiResponseV1>> DeleteAboutusCategoryWithHttpInfoAsync(long categoryId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// remove a user from a category
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">Aboutus Category id</param>
        /// <param name="entryId">Aboutus Category User Entry id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponseV1</returns>
        System.Threading.Tasks.Task<ApiResponseV1> DeleteAboutusCategoryUserAsync(long categoryId, long entryId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// remove a user from a category
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">Aboutus Category id</param>
        /// <param name="entryId">Aboutus Category User Entry id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApiResponseV1)</returns>
        System.Threading.Tasks.Task<ApiResponse<ApiResponseV1>> DeleteAboutusCategoryUserWithHttpInfoAsync(long categoryId, long entryId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// reorder aboutus
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aboutusCategoryReorderModelV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponseV1</returns>
        System.Threading.Tasks.Task<ApiResponseV1> ReorderAboutusAsync(List<AboutusCategoryReorderModelV1> aboutusCategoryReorderModelV1, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// reorder aboutus
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aboutusCategoryReorderModelV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApiResponseV1)</returns>
        System.Threading.Tasks.Task<ApiResponse<ApiResponseV1>> ReorderAboutusWithHttpInfoAsync(List<AboutusCategoryReorderModelV1> aboutusCategoryReorderModelV1, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// returns categories and users
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;AboutusCategoryModelV1&gt;</returns>
        System.Threading.Tasks.Task<List<AboutusCategoryModelV1>> RetrieveAboutusCategoriesAndUsersAsync(int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// returns categories and users
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;AboutusCategoryModelV1&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<AboutusCategoryModelV1>>> RetrieveAboutusCategoriesAndUsersWithHttpInfoAsync(int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// returns a single category
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">Aboutus Category id</param>
        /// <param name="unrenderedFields">Output fields in unrendered form for editing (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of AboutusCategoryModelV1</returns>
        System.Threading.Tasks.Task<AboutusCategoryModelV1> RetrieveAboutusCategoryAsync(long categoryId, bool? unrenderedFields = default(bool?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// returns a single category
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">Aboutus Category id</param>
        /// <param name="unrenderedFields">Output fields in unrendered form for editing (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (AboutusCategoryModelV1)</returns>
        System.Threading.Tasks.Task<ApiResponse<AboutusCategoryModelV1>> RetrieveAboutusCategoryWithHttpInfoAsync(long categoryId, bool? unrenderedFields = default(bool?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// returns description of site
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="unrenderedFields">Output fields in unrendered form for editing (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of AboutusDescriptionModelV1</returns>
        System.Threading.Tasks.Task<AboutusDescriptionModelV1> RetrieveAboutusDescriptionAsync(bool? unrenderedFields = default(bool?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// returns description of site
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="unrenderedFields">Output fields in unrendered form for editing (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (AboutusDescriptionModelV1)</returns>
        System.Threading.Tasks.Task<ApiResponse<AboutusDescriptionModelV1>> RetrieveAboutusDescriptionWithHttpInfoAsync(bool? unrenderedFields = default(bool?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// update a category
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">id of category</param>
        /// <param name="aboutusCategoryModelUpdateV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponseV1</returns>
        System.Threading.Tasks.Task<ApiResponseV1> UpdateAboutusCategoryAsync(long categoryId, AboutusCategoryModelUpdateV1 aboutusCategoryModelUpdateV1, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// update a category
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">id of category</param>
        /// <param name="aboutusCategoryModelUpdateV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApiResponseV1)</returns>
        System.Threading.Tasks.Task<ApiResponse<ApiResponseV1>> UpdateAboutusCategoryWithHttpInfoAsync(long categoryId, AboutusCategoryModelUpdateV1 aboutusCategoryModelUpdateV1, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// update description of site
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aboutusDescriptionModelV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponseV1</returns>
        System.Threading.Tasks.Task<ApiResponseV1> UpdateAboutusDescriptionAsync(AboutusDescriptionModelV1 aboutusDescriptionModelV1, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// update description of site
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aboutusDescriptionModelV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApiResponseV1)</returns>
        System.Threading.Tasks.Task<ApiResponse<ApiResponseV1>> UpdateAboutusDescriptionWithHttpInfoAsync(AboutusDescriptionModelV1 aboutusDescriptionModelV1, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IAboutusApi : IAboutusApiSync, IAboutusApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class AboutusApi : IAboutusApi
    {
        private MangaUpdates.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="AboutusApi"/> class.
        /// </summary>
        /// <returns></returns>
        public AboutusApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AboutusApi"/> class.
        /// </summary>
        /// <returns></returns>
        public AboutusApi(string basePath)
        {
            this.Configuration = MangaUpdates.Client.Configuration.MergeConfigurations(
                MangaUpdates.Client.GlobalConfiguration.Instance,
                new MangaUpdates.Client.Configuration { BasePath = basePath }
            );
            this.Client = new MangaUpdates.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new MangaUpdates.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = MangaUpdates.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AboutusApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public AboutusApi(MangaUpdates.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = MangaUpdates.Client.Configuration.MergeConfigurations(
                MangaUpdates.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new MangaUpdates.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new MangaUpdates.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = MangaUpdates.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AboutusApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public AboutusApi(MangaUpdates.Client.ISynchronousClient client, MangaUpdates.Client.IAsynchronousClient asyncClient, MangaUpdates.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = MangaUpdates.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public MangaUpdates.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public MangaUpdates.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public MangaUpdates.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public MangaUpdates.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// add a category 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aboutusCategoryModelUpdateV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponseV1</returns>
        public ApiResponseV1 AddAboutusCategory(AboutusCategoryModelUpdateV1 aboutusCategoryModelUpdateV1, int operationIndex = 0)
        {
            MangaUpdates.Client.ApiResponse<ApiResponseV1> localVarResponse = AddAboutusCategoryWithHttpInfo(aboutusCategoryModelUpdateV1);
            return localVarResponse.Data;
        }

        /// <summary>
        /// add a category 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aboutusCategoryModelUpdateV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ApiResponseV1</returns>
        public MangaUpdates.Client.ApiResponse<ApiResponseV1> AddAboutusCategoryWithHttpInfo(AboutusCategoryModelUpdateV1 aboutusCategoryModelUpdateV1, int operationIndex = 0)
        {
            // verify the required parameter 'aboutusCategoryModelUpdateV1' is set
            if (aboutusCategoryModelUpdateV1 == null)
            {
                throw new MangaUpdates.Client.ApiException(400, "Missing required parameter 'aboutusCategoryModelUpdateV1' when calling AboutusApi->AddAboutusCategory");
            }

            MangaUpdates.Client.RequestOptions localVarRequestOptions = new MangaUpdates.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MangaUpdates.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MangaUpdates.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = aboutusCategoryModelUpdateV1;

            localVarRequestOptions.Operation = "AboutusApi.AddAboutusCategory";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (bearerAuth) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ApiResponseV1>("/aboutus/category", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("AddAboutusCategory", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// add a category 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aboutusCategoryModelUpdateV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponseV1</returns>
        public async System.Threading.Tasks.Task<ApiResponseV1> AddAboutusCategoryAsync(AboutusCategoryModelUpdateV1 aboutusCategoryModelUpdateV1, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            MangaUpdates.Client.ApiResponse<ApiResponseV1> localVarResponse = await AddAboutusCategoryWithHttpInfoAsync(aboutusCategoryModelUpdateV1, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// add a category 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aboutusCategoryModelUpdateV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApiResponseV1)</returns>
        public async System.Threading.Tasks.Task<MangaUpdates.Client.ApiResponse<ApiResponseV1>> AddAboutusCategoryWithHttpInfoAsync(AboutusCategoryModelUpdateV1 aboutusCategoryModelUpdateV1, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'aboutusCategoryModelUpdateV1' is set
            if (aboutusCategoryModelUpdateV1 == null)
            {
                throw new MangaUpdates.Client.ApiException(400, "Missing required parameter 'aboutusCategoryModelUpdateV1' when calling AboutusApi->AddAboutusCategory");
            }


            MangaUpdates.Client.RequestOptions localVarRequestOptions = new MangaUpdates.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MangaUpdates.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MangaUpdates.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = aboutusCategoryModelUpdateV1;

            localVarRequestOptions.Operation = "AboutusApi.AddAboutusCategory";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (bearerAuth) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ApiResponseV1>("/aboutus/category", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("AddAboutusCategory", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// add a user to a category 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">Aboutus Category id</param>
        /// <param name="aboutusUserModelUpdateV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponseV1</returns>
        public ApiResponseV1 AddAboutusCategoryUser(long categoryId, AboutusUserModelUpdateV1 aboutusUserModelUpdateV1, int operationIndex = 0)
        {
            MangaUpdates.Client.ApiResponse<ApiResponseV1> localVarResponse = AddAboutusCategoryUserWithHttpInfo(categoryId, aboutusUserModelUpdateV1);
            return localVarResponse.Data;
        }

        /// <summary>
        /// add a user to a category 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">Aboutus Category id</param>
        /// <param name="aboutusUserModelUpdateV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ApiResponseV1</returns>
        public MangaUpdates.Client.ApiResponse<ApiResponseV1> AddAboutusCategoryUserWithHttpInfo(long categoryId, AboutusUserModelUpdateV1 aboutusUserModelUpdateV1, int operationIndex = 0)
        {
            // verify the required parameter 'aboutusUserModelUpdateV1' is set
            if (aboutusUserModelUpdateV1 == null)
            {
                throw new MangaUpdates.Client.ApiException(400, "Missing required parameter 'aboutusUserModelUpdateV1' when calling AboutusApi->AddAboutusCategoryUser");
            }

            MangaUpdates.Client.RequestOptions localVarRequestOptions = new MangaUpdates.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MangaUpdates.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MangaUpdates.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("category_id", MangaUpdates.Client.ClientUtils.ParameterToString(categoryId)); // path parameter
            localVarRequestOptions.Data = aboutusUserModelUpdateV1;

            localVarRequestOptions.Operation = "AboutusApi.AddAboutusCategoryUser";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (bearerAuth) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ApiResponseV1>("/aboutus/category/{category_id}/users", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("AddAboutusCategoryUser", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// add a user to a category 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">Aboutus Category id</param>
        /// <param name="aboutusUserModelUpdateV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponseV1</returns>
        public async System.Threading.Tasks.Task<ApiResponseV1> AddAboutusCategoryUserAsync(long categoryId, AboutusUserModelUpdateV1 aboutusUserModelUpdateV1, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            MangaUpdates.Client.ApiResponse<ApiResponseV1> localVarResponse = await AddAboutusCategoryUserWithHttpInfoAsync(categoryId, aboutusUserModelUpdateV1, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// add a user to a category 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">Aboutus Category id</param>
        /// <param name="aboutusUserModelUpdateV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApiResponseV1)</returns>
        public async System.Threading.Tasks.Task<MangaUpdates.Client.ApiResponse<ApiResponseV1>> AddAboutusCategoryUserWithHttpInfoAsync(long categoryId, AboutusUserModelUpdateV1 aboutusUserModelUpdateV1, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'aboutusUserModelUpdateV1' is set
            if (aboutusUserModelUpdateV1 == null)
            {
                throw new MangaUpdates.Client.ApiException(400, "Missing required parameter 'aboutusUserModelUpdateV1' when calling AboutusApi->AddAboutusCategoryUser");
            }


            MangaUpdates.Client.RequestOptions localVarRequestOptions = new MangaUpdates.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MangaUpdates.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MangaUpdates.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("category_id", MangaUpdates.Client.ClientUtils.ParameterToString(categoryId)); // path parameter
            localVarRequestOptions.Data = aboutusUserModelUpdateV1;

            localVarRequestOptions.Operation = "AboutusApi.AddAboutusCategoryUser";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (bearerAuth) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ApiResponseV1>("/aboutus/category/{category_id}/users", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("AddAboutusCategoryUser", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// remove a category 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">Aboutus Category id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponseV1</returns>
        public ApiResponseV1 DeleteAboutusCategory(long categoryId, int operationIndex = 0)
        {
            MangaUpdates.Client.ApiResponse<ApiResponseV1> localVarResponse = DeleteAboutusCategoryWithHttpInfo(categoryId);
            return localVarResponse.Data;
        }

        /// <summary>
        /// remove a category 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">Aboutus Category id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ApiResponseV1</returns>
        public MangaUpdates.Client.ApiResponse<ApiResponseV1> DeleteAboutusCategoryWithHttpInfo(long categoryId, int operationIndex = 0)
        {
            MangaUpdates.Client.RequestOptions localVarRequestOptions = new MangaUpdates.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MangaUpdates.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MangaUpdates.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("category_id", MangaUpdates.Client.ClientUtils.ParameterToString(categoryId)); // path parameter

            localVarRequestOptions.Operation = "AboutusApi.DeleteAboutusCategory";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (bearerAuth) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Delete<ApiResponseV1>("/aboutus/category/{category_id}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DeleteAboutusCategory", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// remove a category 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">Aboutus Category id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponseV1</returns>
        public async System.Threading.Tasks.Task<ApiResponseV1> DeleteAboutusCategoryAsync(long categoryId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            MangaUpdates.Client.ApiResponse<ApiResponseV1> localVarResponse = await DeleteAboutusCategoryWithHttpInfoAsync(categoryId, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// remove a category 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">Aboutus Category id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApiResponseV1)</returns>
        public async System.Threading.Tasks.Task<MangaUpdates.Client.ApiResponse<ApiResponseV1>> DeleteAboutusCategoryWithHttpInfoAsync(long categoryId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            MangaUpdates.Client.RequestOptions localVarRequestOptions = new MangaUpdates.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MangaUpdates.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MangaUpdates.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("category_id", MangaUpdates.Client.ClientUtils.ParameterToString(categoryId)); // path parameter

            localVarRequestOptions.Operation = "AboutusApi.DeleteAboutusCategory";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (bearerAuth) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.DeleteAsync<ApiResponseV1>("/aboutus/category/{category_id}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DeleteAboutusCategory", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// remove a user from a category 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">Aboutus Category id</param>
        /// <param name="entryId">Aboutus Category User Entry id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponseV1</returns>
        public ApiResponseV1 DeleteAboutusCategoryUser(long categoryId, long entryId, int operationIndex = 0)
        {
            MangaUpdates.Client.ApiResponse<ApiResponseV1> localVarResponse = DeleteAboutusCategoryUserWithHttpInfo(categoryId, entryId);
            return localVarResponse.Data;
        }

        /// <summary>
        /// remove a user from a category 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">Aboutus Category id</param>
        /// <param name="entryId">Aboutus Category User Entry id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ApiResponseV1</returns>
        public MangaUpdates.Client.ApiResponse<ApiResponseV1> DeleteAboutusCategoryUserWithHttpInfo(long categoryId, long entryId, int operationIndex = 0)
        {
            MangaUpdates.Client.RequestOptions localVarRequestOptions = new MangaUpdates.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MangaUpdates.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MangaUpdates.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("category_id", MangaUpdates.Client.ClientUtils.ParameterToString(categoryId)); // path parameter
            localVarRequestOptions.PathParameters.Add("entry_id", MangaUpdates.Client.ClientUtils.ParameterToString(entryId)); // path parameter

            localVarRequestOptions.Operation = "AboutusApi.DeleteAboutusCategoryUser";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (bearerAuth) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Delete<ApiResponseV1>("/aboutus/category/{category_id}/users/{entry_id}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DeleteAboutusCategoryUser", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// remove a user from a category 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">Aboutus Category id</param>
        /// <param name="entryId">Aboutus Category User Entry id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponseV1</returns>
        public async System.Threading.Tasks.Task<ApiResponseV1> DeleteAboutusCategoryUserAsync(long categoryId, long entryId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            MangaUpdates.Client.ApiResponse<ApiResponseV1> localVarResponse = await DeleteAboutusCategoryUserWithHttpInfoAsync(categoryId, entryId, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// remove a user from a category 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">Aboutus Category id</param>
        /// <param name="entryId">Aboutus Category User Entry id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApiResponseV1)</returns>
        public async System.Threading.Tasks.Task<MangaUpdates.Client.ApiResponse<ApiResponseV1>> DeleteAboutusCategoryUserWithHttpInfoAsync(long categoryId, long entryId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            MangaUpdates.Client.RequestOptions localVarRequestOptions = new MangaUpdates.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MangaUpdates.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MangaUpdates.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("category_id", MangaUpdates.Client.ClientUtils.ParameterToString(categoryId)); // path parameter
            localVarRequestOptions.PathParameters.Add("entry_id", MangaUpdates.Client.ClientUtils.ParameterToString(entryId)); // path parameter

            localVarRequestOptions.Operation = "AboutusApi.DeleteAboutusCategoryUser";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (bearerAuth) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.DeleteAsync<ApiResponseV1>("/aboutus/category/{category_id}/users/{entry_id}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DeleteAboutusCategoryUser", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// reorder aboutus 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aboutusCategoryReorderModelV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponseV1</returns>
        public ApiResponseV1 ReorderAboutus(List<AboutusCategoryReorderModelV1> aboutusCategoryReorderModelV1, int operationIndex = 0)
        {
            MangaUpdates.Client.ApiResponse<ApiResponseV1> localVarResponse = ReorderAboutusWithHttpInfo(aboutusCategoryReorderModelV1);
            return localVarResponse.Data;
        }

        /// <summary>
        /// reorder aboutus 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aboutusCategoryReorderModelV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ApiResponseV1</returns>
        public MangaUpdates.Client.ApiResponse<ApiResponseV1> ReorderAboutusWithHttpInfo(List<AboutusCategoryReorderModelV1> aboutusCategoryReorderModelV1, int operationIndex = 0)
        {
            // verify the required parameter 'aboutusCategoryReorderModelV1' is set
            if (aboutusCategoryReorderModelV1 == null)
            {
                throw new MangaUpdates.Client.ApiException(400, "Missing required parameter 'aboutusCategoryReorderModelV1' when calling AboutusApi->ReorderAboutus");
            }

            MangaUpdates.Client.RequestOptions localVarRequestOptions = new MangaUpdates.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MangaUpdates.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MangaUpdates.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = aboutusCategoryReorderModelV1;

            localVarRequestOptions.Operation = "AboutusApi.ReorderAboutus";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (bearerAuth) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ApiResponseV1>("/aboutus/reorder", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ReorderAboutus", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// reorder aboutus 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aboutusCategoryReorderModelV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponseV1</returns>
        public async System.Threading.Tasks.Task<ApiResponseV1> ReorderAboutusAsync(List<AboutusCategoryReorderModelV1> aboutusCategoryReorderModelV1, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            MangaUpdates.Client.ApiResponse<ApiResponseV1> localVarResponse = await ReorderAboutusWithHttpInfoAsync(aboutusCategoryReorderModelV1, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// reorder aboutus 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aboutusCategoryReorderModelV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApiResponseV1)</returns>
        public async System.Threading.Tasks.Task<MangaUpdates.Client.ApiResponse<ApiResponseV1>> ReorderAboutusWithHttpInfoAsync(List<AboutusCategoryReorderModelV1> aboutusCategoryReorderModelV1, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'aboutusCategoryReorderModelV1' is set
            if (aboutusCategoryReorderModelV1 == null)
            {
                throw new MangaUpdates.Client.ApiException(400, "Missing required parameter 'aboutusCategoryReorderModelV1' when calling AboutusApi->ReorderAboutus");
            }


            MangaUpdates.Client.RequestOptions localVarRequestOptions = new MangaUpdates.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MangaUpdates.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MangaUpdates.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = aboutusCategoryReorderModelV1;

            localVarRequestOptions.Operation = "AboutusApi.ReorderAboutus";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (bearerAuth) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ApiResponseV1>("/aboutus/reorder", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ReorderAboutus", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// returns categories and users 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;AboutusCategoryModelV1&gt;</returns>
        public List<AboutusCategoryModelV1> RetrieveAboutusCategoriesAndUsers(int operationIndex = 0)
        {
            MangaUpdates.Client.ApiResponse<List<AboutusCategoryModelV1>> localVarResponse = RetrieveAboutusCategoriesAndUsersWithHttpInfo();
            return localVarResponse.Data;
        }

        /// <summary>
        /// returns categories and users 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;AboutusCategoryModelV1&gt;</returns>
        public MangaUpdates.Client.ApiResponse<List<AboutusCategoryModelV1>> RetrieveAboutusCategoriesAndUsersWithHttpInfo(int operationIndex = 0)
        {
            MangaUpdates.Client.RequestOptions localVarRequestOptions = new MangaUpdates.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MangaUpdates.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MangaUpdates.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }


            localVarRequestOptions.Operation = "AboutusApi.RetrieveAboutusCategoriesAndUsers";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (bearerAuth) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<List<AboutusCategoryModelV1>>("/aboutus/users", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("RetrieveAboutusCategoriesAndUsers", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// returns categories and users 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;AboutusCategoryModelV1&gt;</returns>
        public async System.Threading.Tasks.Task<List<AboutusCategoryModelV1>> RetrieveAboutusCategoriesAndUsersAsync(int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            MangaUpdates.Client.ApiResponse<List<AboutusCategoryModelV1>> localVarResponse = await RetrieveAboutusCategoriesAndUsersWithHttpInfoAsync(operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// returns categories and users 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;AboutusCategoryModelV1&gt;)</returns>
        public async System.Threading.Tasks.Task<MangaUpdates.Client.ApiResponse<List<AboutusCategoryModelV1>>> RetrieveAboutusCategoriesAndUsersWithHttpInfoAsync(int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            MangaUpdates.Client.RequestOptions localVarRequestOptions = new MangaUpdates.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MangaUpdates.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MangaUpdates.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }


            localVarRequestOptions.Operation = "AboutusApi.RetrieveAboutusCategoriesAndUsers";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (bearerAuth) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<AboutusCategoryModelV1>>("/aboutus/users", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("RetrieveAboutusCategoriesAndUsers", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// returns a single category 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">Aboutus Category id</param>
        /// <param name="unrenderedFields">Output fields in unrendered form for editing (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>AboutusCategoryModelV1</returns>
        public AboutusCategoryModelV1 RetrieveAboutusCategory(long categoryId, bool? unrenderedFields = default(bool?), int operationIndex = 0)
        {
            MangaUpdates.Client.ApiResponse<AboutusCategoryModelV1> localVarResponse = RetrieveAboutusCategoryWithHttpInfo(categoryId, unrenderedFields);
            return localVarResponse.Data;
        }

        /// <summary>
        /// returns a single category 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">Aboutus Category id</param>
        /// <param name="unrenderedFields">Output fields in unrendered form for editing (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of AboutusCategoryModelV1</returns>
        public MangaUpdates.Client.ApiResponse<AboutusCategoryModelV1> RetrieveAboutusCategoryWithHttpInfo(long categoryId, bool? unrenderedFields = default(bool?), int operationIndex = 0)
        {
            MangaUpdates.Client.RequestOptions localVarRequestOptions = new MangaUpdates.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MangaUpdates.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MangaUpdates.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("category_id", MangaUpdates.Client.ClientUtils.ParameterToString(categoryId)); // path parameter
            if (unrenderedFields != null)
            {
                localVarRequestOptions.QueryParameters.Add(MangaUpdates.Client.ClientUtils.ParameterToMultiMap("", "unrenderedFields", unrenderedFields));
            }

            localVarRequestOptions.Operation = "AboutusApi.RetrieveAboutusCategory";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (bearerAuth) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<AboutusCategoryModelV1>("/aboutus/category/{category_id}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("RetrieveAboutusCategory", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// returns a single category 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">Aboutus Category id</param>
        /// <param name="unrenderedFields">Output fields in unrendered form for editing (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of AboutusCategoryModelV1</returns>
        public async System.Threading.Tasks.Task<AboutusCategoryModelV1> RetrieveAboutusCategoryAsync(long categoryId, bool? unrenderedFields = default(bool?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            MangaUpdates.Client.ApiResponse<AboutusCategoryModelV1> localVarResponse = await RetrieveAboutusCategoryWithHttpInfoAsync(categoryId, unrenderedFields, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// returns a single category 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">Aboutus Category id</param>
        /// <param name="unrenderedFields">Output fields in unrendered form for editing (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (AboutusCategoryModelV1)</returns>
        public async System.Threading.Tasks.Task<MangaUpdates.Client.ApiResponse<AboutusCategoryModelV1>> RetrieveAboutusCategoryWithHttpInfoAsync(long categoryId, bool? unrenderedFields = default(bool?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            MangaUpdates.Client.RequestOptions localVarRequestOptions = new MangaUpdates.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MangaUpdates.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MangaUpdates.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("category_id", MangaUpdates.Client.ClientUtils.ParameterToString(categoryId)); // path parameter
            if (unrenderedFields != null)
            {
                localVarRequestOptions.QueryParameters.Add(MangaUpdates.Client.ClientUtils.ParameterToMultiMap("", "unrenderedFields", unrenderedFields));
            }

            localVarRequestOptions.Operation = "AboutusApi.RetrieveAboutusCategory";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (bearerAuth) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<AboutusCategoryModelV1>("/aboutus/category/{category_id}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("RetrieveAboutusCategory", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// returns description of site 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="unrenderedFields">Output fields in unrendered form for editing (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>AboutusDescriptionModelV1</returns>
        public AboutusDescriptionModelV1 RetrieveAboutusDescription(bool? unrenderedFields = default(bool?), int operationIndex = 0)
        {
            MangaUpdates.Client.ApiResponse<AboutusDescriptionModelV1> localVarResponse = RetrieveAboutusDescriptionWithHttpInfo(unrenderedFields);
            return localVarResponse.Data;
        }

        /// <summary>
        /// returns description of site 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="unrenderedFields">Output fields in unrendered form for editing (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of AboutusDescriptionModelV1</returns>
        public MangaUpdates.Client.ApiResponse<AboutusDescriptionModelV1> RetrieveAboutusDescriptionWithHttpInfo(bool? unrenderedFields = default(bool?), int operationIndex = 0)
        {
            MangaUpdates.Client.RequestOptions localVarRequestOptions = new MangaUpdates.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MangaUpdates.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MangaUpdates.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (unrenderedFields != null)
            {
                localVarRequestOptions.QueryParameters.Add(MangaUpdates.Client.ClientUtils.ParameterToMultiMap("", "unrenderedFields", unrenderedFields));
            }

            localVarRequestOptions.Operation = "AboutusApi.RetrieveAboutusDescription";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (bearerAuth) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<AboutusDescriptionModelV1>("/aboutus", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("RetrieveAboutusDescription", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// returns description of site 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="unrenderedFields">Output fields in unrendered form for editing (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of AboutusDescriptionModelV1</returns>
        public async System.Threading.Tasks.Task<AboutusDescriptionModelV1> RetrieveAboutusDescriptionAsync(bool? unrenderedFields = default(bool?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            MangaUpdates.Client.ApiResponse<AboutusDescriptionModelV1> localVarResponse = await RetrieveAboutusDescriptionWithHttpInfoAsync(unrenderedFields, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// returns description of site 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="unrenderedFields">Output fields in unrendered form for editing (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (AboutusDescriptionModelV1)</returns>
        public async System.Threading.Tasks.Task<MangaUpdates.Client.ApiResponse<AboutusDescriptionModelV1>> RetrieveAboutusDescriptionWithHttpInfoAsync(bool? unrenderedFields = default(bool?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            MangaUpdates.Client.RequestOptions localVarRequestOptions = new MangaUpdates.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MangaUpdates.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MangaUpdates.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (unrenderedFields != null)
            {
                localVarRequestOptions.QueryParameters.Add(MangaUpdates.Client.ClientUtils.ParameterToMultiMap("", "unrenderedFields", unrenderedFields));
            }

            localVarRequestOptions.Operation = "AboutusApi.RetrieveAboutusDescription";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (bearerAuth) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<AboutusDescriptionModelV1>("/aboutus", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("RetrieveAboutusDescription", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// update a category 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">id of category</param>
        /// <param name="aboutusCategoryModelUpdateV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponseV1</returns>
        public ApiResponseV1 UpdateAboutusCategory(long categoryId, AboutusCategoryModelUpdateV1 aboutusCategoryModelUpdateV1, int operationIndex = 0)
        {
            MangaUpdates.Client.ApiResponse<ApiResponseV1> localVarResponse = UpdateAboutusCategoryWithHttpInfo(categoryId, aboutusCategoryModelUpdateV1);
            return localVarResponse.Data;
        }

        /// <summary>
        /// update a category 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">id of category</param>
        /// <param name="aboutusCategoryModelUpdateV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ApiResponseV1</returns>
        public MangaUpdates.Client.ApiResponse<ApiResponseV1> UpdateAboutusCategoryWithHttpInfo(long categoryId, AboutusCategoryModelUpdateV1 aboutusCategoryModelUpdateV1, int operationIndex = 0)
        {
            // verify the required parameter 'aboutusCategoryModelUpdateV1' is set
            if (aboutusCategoryModelUpdateV1 == null)
            {
                throw new MangaUpdates.Client.ApiException(400, "Missing required parameter 'aboutusCategoryModelUpdateV1' when calling AboutusApi->UpdateAboutusCategory");
            }

            MangaUpdates.Client.RequestOptions localVarRequestOptions = new MangaUpdates.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MangaUpdates.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MangaUpdates.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("category_id", MangaUpdates.Client.ClientUtils.ParameterToString(categoryId)); // path parameter
            localVarRequestOptions.Data = aboutusCategoryModelUpdateV1;

            localVarRequestOptions.Operation = "AboutusApi.UpdateAboutusCategory";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (bearerAuth) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Patch<ApiResponseV1>("/aboutus/category/{category_id}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("UpdateAboutusCategory", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// update a category 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">id of category</param>
        /// <param name="aboutusCategoryModelUpdateV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponseV1</returns>
        public async System.Threading.Tasks.Task<ApiResponseV1> UpdateAboutusCategoryAsync(long categoryId, AboutusCategoryModelUpdateV1 aboutusCategoryModelUpdateV1, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            MangaUpdates.Client.ApiResponse<ApiResponseV1> localVarResponse = await UpdateAboutusCategoryWithHttpInfoAsync(categoryId, aboutusCategoryModelUpdateV1, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// update a category 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="categoryId">id of category</param>
        /// <param name="aboutusCategoryModelUpdateV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApiResponseV1)</returns>
        public async System.Threading.Tasks.Task<MangaUpdates.Client.ApiResponse<ApiResponseV1>> UpdateAboutusCategoryWithHttpInfoAsync(long categoryId, AboutusCategoryModelUpdateV1 aboutusCategoryModelUpdateV1, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'aboutusCategoryModelUpdateV1' is set
            if (aboutusCategoryModelUpdateV1 == null)
            {
                throw new MangaUpdates.Client.ApiException(400, "Missing required parameter 'aboutusCategoryModelUpdateV1' when calling AboutusApi->UpdateAboutusCategory");
            }


            MangaUpdates.Client.RequestOptions localVarRequestOptions = new MangaUpdates.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MangaUpdates.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MangaUpdates.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("category_id", MangaUpdates.Client.ClientUtils.ParameterToString(categoryId)); // path parameter
            localVarRequestOptions.Data = aboutusCategoryModelUpdateV1;

            localVarRequestOptions.Operation = "AboutusApi.UpdateAboutusCategory";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (bearerAuth) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PatchAsync<ApiResponseV1>("/aboutus/category/{category_id}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("UpdateAboutusCategory", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// update description of site 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aboutusDescriptionModelV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponseV1</returns>
        public ApiResponseV1 UpdateAboutusDescription(AboutusDescriptionModelV1 aboutusDescriptionModelV1, int operationIndex = 0)
        {
            MangaUpdates.Client.ApiResponse<ApiResponseV1> localVarResponse = UpdateAboutusDescriptionWithHttpInfo(aboutusDescriptionModelV1);
            return localVarResponse.Data;
        }

        /// <summary>
        /// update description of site 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aboutusDescriptionModelV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ApiResponseV1</returns>
        public MangaUpdates.Client.ApiResponse<ApiResponseV1> UpdateAboutusDescriptionWithHttpInfo(AboutusDescriptionModelV1 aboutusDescriptionModelV1, int operationIndex = 0)
        {
            // verify the required parameter 'aboutusDescriptionModelV1' is set
            if (aboutusDescriptionModelV1 == null)
            {
                throw new MangaUpdates.Client.ApiException(400, "Missing required parameter 'aboutusDescriptionModelV1' when calling AboutusApi->UpdateAboutusDescription");
            }

            MangaUpdates.Client.RequestOptions localVarRequestOptions = new MangaUpdates.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MangaUpdates.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MangaUpdates.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = aboutusDescriptionModelV1;

            localVarRequestOptions.Operation = "AboutusApi.UpdateAboutusDescription";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (bearerAuth) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ApiResponseV1>("/aboutus", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("UpdateAboutusDescription", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// update description of site 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aboutusDescriptionModelV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponseV1</returns>
        public async System.Threading.Tasks.Task<ApiResponseV1> UpdateAboutusDescriptionAsync(AboutusDescriptionModelV1 aboutusDescriptionModelV1, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            MangaUpdates.Client.ApiResponse<ApiResponseV1> localVarResponse = await UpdateAboutusDescriptionWithHttpInfoAsync(aboutusDescriptionModelV1, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// update description of site 
        /// </summary>
        /// <exception cref="MangaUpdates.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aboutusDescriptionModelV1"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApiResponseV1)</returns>
        public async System.Threading.Tasks.Task<MangaUpdates.Client.ApiResponse<ApiResponseV1>> UpdateAboutusDescriptionWithHttpInfoAsync(AboutusDescriptionModelV1 aboutusDescriptionModelV1, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'aboutusDescriptionModelV1' is set
            if (aboutusDescriptionModelV1 == null)
            {
                throw new MangaUpdates.Client.ApiException(400, "Missing required parameter 'aboutusDescriptionModelV1' when calling AboutusApi->UpdateAboutusDescription");
            }


            MangaUpdates.Client.RequestOptions localVarRequestOptions = new MangaUpdates.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = MangaUpdates.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = MangaUpdates.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = aboutusDescriptionModelV1;

            localVarRequestOptions.Operation = "AboutusApi.UpdateAboutusDescription";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (bearerAuth) required
            // bearer authentication required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ApiResponseV1>("/aboutus", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("UpdateAboutusDescription", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
